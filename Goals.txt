================Goals================
--GUI:
	--login
	--database connections
	--select objects to compare (allow for specific targeting of tables/procedures?)
	--file-naming schema

--Backend Python
	--separate out SQL object classes
	--modularize each compare/generation for easier calling, dependent on the user's selection
	--build function compare/generation
	--figure out an elegant way to compare if two tables contain the same keys/defaults/contraints
		--ensure that if one has a hash (because it was system generated) and the other does not, that the one with the manually defined name is used.
	--If tables exist in the destination database, use alter scrips. Otherwise, build create scripts
	--If procedures and functions exist, generate drop/create scrips
	--Research additional "gotchas"
	--error handling
	
--Backend SQL
	--storage db is accessible only with the appropriate login
	--discuss usage:
		--holds generated scrips until all compares and generates are completed?
		--holds database connection data
		--holds user preferences
		--holds definitions of columns and other info about the SQL objects that we're building
	